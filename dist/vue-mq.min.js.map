{"version":3,"file":"vue-mq.min.js","sources":["../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_root.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_baseGetTag.js","../node_modules/string-convert/camel2hyphen.js","../node_modules/json2mq/index.js","../src/helpers.js","../src/utils.js","../src/component.js","../src/index.js"],"sourcesContent":["/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var camel2hyphen = function (str) {\n  return str\n          .replace(/[A-Z]/g, function (match) {\n            return '-' + match.toLowerCase();\n          })\n          .toLowerCase();\n};\n\nmodule.exports = camel2hyphen;","var camel2hyphen = require('string-convert/camel2hyphen');\n\nvar isDimension = function (feature) {\n  var re = /[height|width]$/;\n  return re.test(feature);\n};\n\nvar obj2mq = function (obj) {\n  var mq = '';\n  var features = Object.keys(obj);\n  features.forEach(function (feature, index) {\n    var value = obj[feature];\n    feature = camel2hyphen(feature);\n    // Add px to dimension features\n    if (isDimension(feature) && typeof value === 'number') {\n      value = value + 'px';\n    }\n    if (value === true) {\n      mq += feature;\n    } else if (value === false) {\n      mq += 'not ' + feature;\n    } else {\n      mq += '(' + feature + ': ' + value + ')';\n    }\n    if (index < features.length-1) {\n      mq += ' and '\n    }\n  });\n  return mq;\n};\n\nvar json2mq = function (query) {\n  var mq = '';\n  if (typeof query === 'string') {\n    return query;\n  }\n  // Handling array of media queries\n  if (query instanceof Array) {\n    query.forEach(function (q, index) {\n      mq += obj2mq(q);\n      if (index < query.length-1) {\n        mq += ', '\n      }\n    });\n    return mq;\n  }\n  // Handling single media query\n  return obj2mq(query);\n};\n\nmodule.exports = json2mq;","import json2mq from 'json2mq'\n\nexport function convertBreakpointsToMediaQueries(breakpoints) {\n  const keys = Object.keys(breakpoints)\n  const values = keys.map(key => breakpoints[key])\n  const breakpointValues = [0, ...values.slice(0, -1)]\n  const mediaQueries = breakpointValues.reduce((sum, value, index) => {\n    const options = Object.assign(\n      {\n        minWidth: value,\n      },\n      index < keys.length - 1 ? { maxWidth: breakpointValues[index+1] - 1 } : {}\n    )\n    const mediaQuery = json2mq(options)\n    return Object.assign(\n      sum,\n      {\n        [keys[index]]: mediaQuery,\n      }\n    )\n  }, {})\n  return mediaQueries\n}\n\nexport function transformValuesFromBreakpoints(breakpoints, values, currentBreakpoint) {\n  const findClosestValue = (currentBreakpoint) => {\n    if (values[currentBreakpoint] !== undefined) return values[currentBreakpoint]\n    const index = breakpoints.findIndex(b => b === currentBreakpoint)\n    const newBreakpoint = index !== -1 || index !== 0 ? breakpoints[index-1] : null\n    if (!newBreakpoint) return values[index]\n    return values[newBreakpoint] !== undefined ? values[newBreakpoint] : findClosestValue(newBreakpoint)\n  }\n  return findClosestValue(currentBreakpoint)\n}\n\nexport function selectBreakpoints(breakpoints, currentBreakpoint) {\n  const index = breakpoints.findIndex(b => b === currentBreakpoint)\n  return breakpoints.slice(index)\n}\n","export function isArray (arg) {\n  return Object.prototype.toString.call(arg) === '[object Array]';\n}\n","// USAGE\n// mq-layout(mq=\"lg\")\n//   p Iâ€™m lg\nimport { selectBreakpoints } from './helpers'\nimport { isArray } from './utils';\nconst component = {\n  props: {\n    mq: {\n      required: true,\n      type: [String, Array],\n    }\n  },\n  computed: {\n    plusModifier() { return !isArray(this.mq) && this.mq.slice(-1) === '+' },\n    activeBreakpoints() {\n      const breakpoints = Object.keys(this.$mqAvailableBreakpoints)\n      const mq = this.plusModifier ? this.mq.slice(0, -1) : (isArray(this.mq) ? this.mq : [this.mq])\n      return this.plusModifier\n        ? selectBreakpoints(breakpoints, mq)\n        : mq\n    }\n  },\n  render(h, props) {\n    const shouldRenderChildren = this.activeBreakpoints.includes(this.$mq)\n    return shouldRenderChildren ? h('div', this.$slots.default) : h()\n  },\n}\n\nexport default component\n","import _throttle from 'lodash/throttle'\n\nimport { convertBreakpointsToMediaQueries, transformValuesFromBreakpoints } from './helpers.js'\nimport MqLayout from './component.js'\n\nconst DEFAULT_BREAKPOINT = {\n  sm: 450,\n  md: 1250,\n  lg: Infinity,\n}\n\nconst DEFAULT_SSR_BREAKPOINT = 'sm'\n\nconst install = function (Vue,\n  {\n    breakpoints = DEFAULT_BREAKPOINT,\n    ssrBreakpoint = DEFAULT_SSR_BREAKPOINT,\n  } = {}\n) {\n  // Init reactive component\n  const reactorComponent = new Vue({\n    data: () => ({\n      currentBreakpoint: null,\n      // lifecycleCheck: 'created',\n    }),\n  })\n\n  const mediaQueries = convertBreakpointsToMediaQueries(breakpoints)\n  Object.keys(mediaQueries).map((key) => {\n    const mediaQuery = mediaQueries[key]\n    const enter = () => { reactorComponent.currentBreakpoint = key }\n    _subscribeToMediaQuery(mediaQuery, enter)\n  })\n\n  function _subscribeToMediaQuery(mediaQuery, enter) {\n    if (typeof window !== 'undefined') {\n      const mql = window.matchMedia(mediaQuery)\n      const cb = ({ matches }) => {\n        if (matches) enter()\n      }\n      mql.addListener(cb) //subscribing\n      cb(mql) //initial trigger\n    }\n  }\n\n  Vue.filter('mq', (currentBreakpoint, values) => {\n    return transformValuesFromBreakpoints(Object.keys(breakpoints), values, currentBreakpoint)\n  })\n  Vue.mixin({\n    data: () => {\n      return {\n        // lifecycleCheck: 'created',\n        mqData: ssrBreakpoint\n      }\n    },\n    computed: {\n      $mq() {\n        // console.log('in $mq... ', this._lifecycleCheck)\n        if (this._isMounted === true) {\n          if (reactorComponent.currentBreakpoint) {\n            return reactorComponent.currentBreakpoint\n          }\n        }\n        return ssrBreakpoint\n      },\n    },\n    // mounted: _throttle(() => {\n    // }, 100),\n    // mounted () {\n    //   // console.log('in vue mq mounted... ', this.mqData, this.lifecycleCheck)\n    //   this.lifecycleCheck = 'mounted'\n    // }\n  })\n  Vue.prototype.$mqAvailableBreakpoints = breakpoints\n  Vue.component('MqLayout', MqLayout)\n}\n\nexport default { install }\n\n"],"names":["global","Object","freeSelf","self","freeGlobal","Function","Symbol","toStringTag","str","replace","match","toLowerCase","obj2mq","obj","mq","features","keys","forEach","feature","index","value","test","isDimension","camel2hyphen","length","query","Array","q","convertBreakpointsToMediaQueries","breakpoints","values","map","key","breakpointValues","slice","reduce","sum","options","assign","mediaQuery","json2mq","isArray","arg","prototype","toString","call","component","String","this","$mqAvailableBreakpoints","plusModifier","currentBreakpoint","findIndex","b","selectBreakpoints","h","props","activeBreakpoints","includes","$mq","$slots","default","DEFAULT_BREAKPOINT","Infinity","Vue","ssrBreakpoint","reactorComponent","mediaQueries","enter","window","mql","matchMedia","cb","matches","addListener","filter","findClosestValue","undefined","newBreakpoint","transformValuesFromBreakpoints","mixin","_isMounted","MqLayout"],"mappings":"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"}